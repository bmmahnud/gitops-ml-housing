name: Build Image and Update Manifests for ArgoCD

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-update:
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: ${{ secrets.GCP_PROJECT }}
      # Base image path (without tag) â€“ repository is "ml-housing-repo", image is "ml-housing-app"
      BASE_IMAGE: us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/ml-housing-repo/ml-housing-app
      # Build a new image tag dynamically (e.g., v1.0.<run_number>)
      IMAGE: us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/ml-housing-repo/ml-housing-app:v1.0.${{ github.run_number }}
      CLUSTER: ${{ secrets.GKE_CLUSTER }}
      ZONE: ${{ secrets.GKE_ZONE }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker

      - name: Build Docker Image with New Tag
        run: |
          echo "Building Docker image: $IMAGE"
          docker build -f app/Dockerfile -t $IMAGE app

      - name: Check Service Account Permissions
        run: |
          # Write the service account key to a file
          echo "${{ secrets.GCP_SA_KEY }}" > key.json
          # Activate the service account using the temporary key file
          gcloud auth activate-service-account --key-file=key.json
          # Remove the key file after use (optional for security)
          rm key.json
          # Get the active service account
          ACTIVE_ACCOUNT=$(gcloud auth list --filter="status:ACTIVE" --format="value(account)")
          echo "Active service account: $ACTIVE_ACCOUNT"
          # Check that the active service account has Artifact Registry Writer role
          if gcloud projects get-iam-policy $PROJECT_ID --flatten="bindings[].members" --format="table(bindings.role)" --filter="bindings.members:$ACTIVE_ACCOUNT" | grep -qi "artifactregistry.writer"; then
              echo "Service account has Artifact Registry Writer permissions."
          else
              echo "ERROR: Service account does not have Artifact Registry Writer permissions."
              exit 1
          fi

      - name: Push Docker Image
        run: |
          echo "Pushing Docker image: $IMAGE"
          docker push $IMAGE

      - name: Update Kubernetes Deployment and Service Manifests
        run: |
          echo "Updating image in manifests/deployment.yaml to: $IMAGE"
          sed -i "s|${BASE_IMAGE}:[^ ]*|${IMAGE}|g" manifests/deployment.yaml
          echo "Updated manifests/deployment.yaml:"
          cat manifests/deployment.yaml
          if [ -f manifests/service.yaml ]; then
            echo "Updating image in manifests/service.yaml to: $IMAGE"
            sed -i "s|${BASE_IMAGE}:[^ ]*|${IMAGE}|g" manifests/service.yaml
            echo "Updated manifests/service.yaml:"
            cat manifests/service.yaml
          else
            echo "manifests/service.yaml not found; skipping update for service."
          fi

      - name: Commit and Push Updated Manifest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          if [ -n "$(git status --porcelain manifests/deployment.yaml)" ] || [ -n "$(git status --porcelain manifests/service.yaml)" ]; then
              echo "Changes detected in manifests; committing..."
              git add manifests/deployment.yaml manifests/service.yaml
              git commit -m "Update image version in manifests to ${IMAGE}"
              git push
          else
              echo "No changes detected in manifests."
          fi
