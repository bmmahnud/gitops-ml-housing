name: Build Image and Update Manifests for ArgoCD

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-update:
    runs-on: ubuntu-latest
    env:
      # Your project details (from secrets)
      PROJECT_ID: ${{ secrets.GCP_PROJECT }}
      # Base image path (without tag) â€“ note the repository name "mlhousing-repo" and image "mlhousing-app"
      BASE_IMAGE: us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/mlhousing-repo/mlhousing-app
      # Build a new tag using GitHub's run number (e.g., v1.0.7)
      IMAGE: us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/mlhousing-repo/mlhousing-app:v1.0.${{ github.run_number }}
      CLUSTER: ${{ secrets.GKE_CLUSTER }}
      ZONE: ${{ secrets.GKE_ZONE }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker

      - name: Build Docker Image with New Tag
        run: |
          echo "Building Docker image: $IMAGE"
          # Build the image using the Dockerfile located in the "app" folder
          docker build -f app/Dockerfile -t $IMAGE app

      - name: Push Docker Image
        run: |
          echo "Pushing Docker image: $IMAGE"
          docker push $IMAGE

      - name: Update Kubernetes Deployment and Service Manifests
        run: |
          echo "Updating image in manifests/deployment.yaml to: $IMAGE"
          # Update the deployment manifest by replacing the old tag with the new IMAGE
          sed -i "s|${BASE_IMAGE}:[^ ]*|${IMAGE}|g" manifests/deployment.yaml
          echo "Updated deployment manifest:"
          cat manifests/deployment.yaml
          # Update the service manifest if it contains an image reference (often services don't have one)
          if [ -f manifests/service.yaml ]; then
            echo "Updating image in manifests/service.yaml to: $IMAGE"
            sed -i "s|${BASE_IMAGE}:[^ ]*|${IMAGE}|g" manifests/service.yaml
            echo "Updated service manifest:"
            cat manifests/service.yaml
          else
            echo "manifests/service.yaml not found; skipping."
          fi

      - name: Commit and Push Updated Manifests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          if [ -n "$(git status --porcelain manifests/deployment.yaml)" ] || [ -n "$(git status --porcelain manifests/service.yaml)" ]; then
              echo "Changes detected in manifests; committing..."
              git add manifests/deployment.yaml manifests/service.yaml
              git commit -m "Update image version in manifests to ${IMAGE}"
              git push
          else
              echo "No changes detected in manifests."
          fi

      - name: Get GKE Cluster Credentials
        run: |
          gcloud container clusters get-credentials $CLUSTER --zone $ZONE --project $PROJECT_ID

      - name: (Optional) Deploy to GKE Directly
        run: |
          # Uncomment these lines if you wish to apply the manifests immediately instead of waiting for ArgoCD.
          # kubectl apply -f manifests/deployment.yaml
          # kubectl apply -f manifests/service.yaml
          # kubectl rollout status deployment/house-price-api
          echo "Manifests updated. ArgoCD should detect the change and deploy the new image."
