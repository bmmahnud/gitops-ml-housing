name: Retrain Model

# Give the GITHUB_TOKEN write permission so it can push commits
permissions:
  contents: write

on:
  workflow_dispatch:

jobs:
  retrain:
    runs-on: ubuntu-latest

    steps:
      # ① Checkout with full history so rebasing works
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          persist-credentials: true    # wire in GITHUB_TOKEN for pushes
          fetch-depth: 0               # fetch all history

      # ② Set up Python
      - name: Setup Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # ③ Install dependencies (pin NumPy <2 so seaborn & scipy load correctly)
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install "numpy<2"
          pip install pandas scikit-learn matplotlib seaborn scipy joblib psycopg2 sqlalchemy

      # ④ Retrain the model
      - name: Retrain model
        run: python app/main.py retrain

      # ⑤ Commit & push the new model file, pulling with autostash so we keep it
      - name: Commit and push model.pkl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          # Pull remote changes, stashing uncommitted (your new model) first and popping it after
          git pull --rebase --autostash origin master
          git add app/model/model.pkl
          if ! git diff --cached --quiet; then
            git commit -m "Retrained model: model.pkl"
            git push origin master
          else
            echo "No changes to commit."
          fi
